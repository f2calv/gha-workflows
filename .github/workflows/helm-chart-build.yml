name: helm-chart-build

on:
  workflow_call:
    inputs:
      registry:
        type: string
        description: e.g. ghcr.io, docker.io, xyz.azurecr.io
        default: ghcr.io
      tag:
        type: string
        description: e.g. latest, latest-dev, 1.2.3
        required: true

jobs:
  build-chart:
    runs-on: ubuntu-latest
    permissions:
      packages: write #for pushing helm package
    env:
      REGISTRY: ${{ inputs.registry }}
      #CHART_REPOSITORY: Note: set dynamically, i.e. github.repository_owner/charts/IMAGE_NAME
      TAG: ${{ inputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: set vars (1 of 2)
        run: |
          IMAGE_NAME=$(echo $REPOSITORY | sed "s|$USERNAME\/||g")
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: set vars (2 of 2)
        run: echo "CHART_REPOSITORY=${{ github.repository_owner }}/charts/$IMAGE_NAME" >> $GITHUB_ENV

      - name: setup helm (1 of 2) #pulls version from devcontainer
        run: |
          npm install --global json5
          json5 -c .devcontainer/devcontainer.json
          VERSION_TO_INSTALL=$(cat .devcontainer/devcontainer.json | jq -r '.features[] | select(.helm | . != null).helm')
          echo "VERSION_TO_INSTALL=$VERSION_TO_INSTALL" >> $GITHUB_ENV
          echo "VERSION_TO_INSTALL=$VERSION_TO_INSTALL"

      - name: setup helm (2 of 2)
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.VERSION_TO_INSTALL }}

      - name: helm registry login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${REGISTRY}/${CHART_REPOSITORY} --username ${{ github.repository_owner }} --password-stdin

      - uses: actions/setup-python@v5
        with:
          python-version: 3.7
        if: false #not implemented/working yet

      - name: chart-testing (setup)
        uses: helm/chart-testing-action@v2
        if: false #not implemented/working yet

      - name: chart-testing (run list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch main)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
        if: false #not implemented/working yet

      - name: chart-testing (run lint)
        run: ct lint
        if: false #not implemented/working yet

      - name: create kind cluster
        uses: helm/kind-action@v1
        #if: steps.list-changed.outputs.changed == 'true'
        if: false #not implemented/working yet

      - name: chart-testing (run install)
        run: ct install
        if: false #not implemented/working yet

      - name: helm package
        run: |
          helm package ${{ github.workspace }}/charts/$IMAGE_NAME/ --destination ${{ github.workspace }}/artifacts/ --app-version ${{ env.TAG }}
        if: false #not implemented/working yet

      - name: helm push
        run: |
          helm push ${{ github.workspace }}/artifacts/$IMAGE_NAME-0.1.0.tgz oci://ghcr.io/${{ github.repository_owner }}
        if: false #not implemented/working yet, need to change the chart version in filename
