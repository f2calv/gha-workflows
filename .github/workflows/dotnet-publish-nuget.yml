name: dotnet-publish-nuget

on:
  workflow_call:
    inputs:
      configuration:
        type: string
        description: e.g. Debug or Release
        required: true
        default: Release
      #workflow_call boolean input type is boolean
      #workflow_dispatch boolean input type is treated like string - because it actually has 3 values true/false/'empty'
      push-preview:
        type: string #cannot be boolean see https://github.com/actions/runner/issues/1483
        description: Push preview branch?
        required: true
        default: 'false'
    secrets:
      #Note: We don't need to pass in GITHUB_TOKEN to a reusable workflow. When a reusable workflow is triggered by a caller workflow, the github context is always associated with the caller workflow. The called workflow is automatically granted access to github.token and secrets.GITHUB_TOKEN.
      #see https://docs.github.com/en/actions/using-workflows/reusing-workflows
      NUGET_API_KEY:
        description: e.g. secrets.NUGET_API_KEY
        required: false
      SONAR_TOKEN:
        description: e.g. secrets.SONAR_TOKEN
        required: false

jobs:
  versioning:
    uses: f2calv/gha-workflows/.github/workflows/gha-release-versioning.yml@v1
    with:
      tag-prefix: ''
      tag-and-release: false

  build:
    runs-on: ubuntu-latest
    needs: [versioning]
    outputs:
      configuration: ${{ steps.dotnet.outputs.configuration }}
    steps:
      - uses: f2calv/gha-dotnet-nuget@v2
        id: dotnet
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          configuration: ${{ inputs.configuration }}
          push-preview: ${{ inputs.push-preview }}
          version: ${{ needs.versioning.outputs.version }}

  release:
    needs: [versioning, build]
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch) || inputs.push-preview == 'true'
    uses: f2calv/gha-workflows/.github/workflows/gha-release-versioning.yml@v1
    permissions:
      contents: write
    with:
      semVer: ${{ needs.versioning.outputs.version }}
      tag-prefix: ''
      move-major-tag: false

  # gha-sonarqube:
  #   runs-on: windows-latest
  #   needs: [build]
  #   steps:
  #     - uses: f2calv/gha-sonarqube-dotnet@v1
  #       with:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         configuration: ${{ needs.build.outputs.configuration }}
