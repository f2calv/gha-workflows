name: gha-release-versioning
#Note: Workflow is called by other workflows to a) determine a semantic version, b) tag the repo with this create a semantic version version and c) create a release.

on:
  workflow_call:
    inputs:
      tag-prefix:
        description: Prefix the semver, i.e. 1.0.1 or v1.0.1
        required: false
        type: string
        default: v
      move-major-tag:
        description: Create and/or move major version tag, i.e. when creating v1.0.2 then move v1 tag up from the v1.0.1 commit.
        required: false
        type: boolean
        default: true
    #Note: We don't need to pass in GITHUB_TOKEN to a reusable workflow. When a reusable workflow is triggered by a caller workflow, the github context is always associated with the caller workflow. The called workflow is automatically granted access to github.token and secrets.GITHUB_TOKEN.
    #see https://docs.github.com/en/actions/using-workflows/reusing-workflows

jobs:
  gha-release-versioning:
    env:
      #Note: GH_TOKEN is automatically picked up by github cli
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: gitversion (1 of 2)
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: 5.x

      - name: gitversion (2 of 2)
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          additionalArguments: /nofetch

      - uses: f2calv/gha-check-release-exists@v2
        id: check-release-exists
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ReleaseName: ${{ steps.gitversion.outputs.semVer }}

      - name: create release
        uses: softprops/action-gh-release@v1
        if: |
          steps.check-release-exists.outputs.ReleaseExists == 'false'
            && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch))
        with:
          tag_name: ${{ inputs.tag-prefix }}${{ steps.gitversion.outputs.fullSemVer }}
          name: ${{ steps.gitversion.outputs.fullSemVer }}

      - name: git apply/move major tag
        if: |
          steps.check-release-exists.outputs.ReleaseExists == 'false'
            && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
            && inputs.move-major-tag == true
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git tag -fa ${{ inputs.tag-prefix }}${{ steps.gitversion.outputs.majorVer }} -m "move ${{ inputs.tag-prefix }}${{ steps.gitversion.outputs.majorVer }} tag"
          git push origin v${{ steps.gitversion.outputs.majorVer }} --force
