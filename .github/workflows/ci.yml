name: gha

on:
  workflow_dispatch:
    inputs:
      PublishPreview:
        type: string
        description: Publish preview branch?
        required: true
        default: "false"
  push:
    branches-ignore:
      - "preview/**"
    paths-ignore:
      - LICENSE
      - README.md
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  #Note: we could potentially use the gha-release-versioning workflow to version the gha-workflow repository, but this might get confusing!!
  # ci:
  #   uses: f2calv/gha-workflows/.github/workflows/gha-release-versioning@v1

  release:
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: gitversion
        shell: pwsh
        id: gitversion
        run: |
          dotnet tool update -g GitVersion.Tool
          $GitVersion = dotnet-gitversion ${{ github.workspace }} /nofetch | ConvertFrom-Json
          Write-Host "SemVer=$($GitVersion.SemVer)"
          echo "SemVer=$($GitVersion.SemVer)" >> $env:GITHUB_OUTPUT
          Write-Host "FullSemVer=$($GitVersion.FullSemVer)"
          echo "FullSemVer=$($GitVersion.FullSemVer)" >> $env:GITHUB_OUTPUT
          Write-Host "MajorVer=$($GitVersion.Major)"
          echo "MajorVer=$($GitVersion.Major)" >> $env:GITHUB_OUTPUT

      - uses: f2calv/gha-check-release-exists@v1
        id: check-release-exists
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ReleaseName: ${{ steps.gitversion.outputs.SemVer }}

      - name: create release
        uses: softprops/action-gh-release@v1
        if: |
          steps.check-release-exists.outputs.ReleaseExists == 'false'
            && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) || github.event.inputs.PublishPreview == 'true')
        with:
          tag_name: v${{ steps.gitversion.outputs.FullSemVer }}
          name: ${{ steps.gitversion.outputs.FullSemVer }}

      - name: git apply/move major tag
        if: |
          steps.check-release-exists.outputs.ReleaseExists == 'false'
            && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git tag -fa v${{ steps.gitversion.outputs.MajorVer }} -m "move v${{ steps.gitversion.outputs.MajorVer }} tag"
          git push origin v${{ steps.gitversion.outputs.MajorVer }} --force
