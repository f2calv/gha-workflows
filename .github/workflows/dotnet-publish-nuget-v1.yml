name: ci

on:
  workflow_call:
    inputs:
      #Note: We don't need to pass in GITHUB_TOKEN to a reusable workflow. When a reusable workflow is triggered by a caller workflow, the github context is always associated with the caller workflow. The called workflow is automatically granted access to github.token and secrets.GITHUB_TOKEN.
      #see https://docs.github.com/en/actions/using-workflows/reusing-workflows
      NUGET_API_KEY:
        type: string
        description: i.e. secrets.NUGET_API_KEY
        required: false
      BuildConfiguration:
        type: string
        description: i.e. Debug or Release
        required: true
        default: Release
      #workflow_call boolean input type is boolean
      #workflow_dispatch boolean input type is treated like string - because it actually has 3 values true/false/'empty'
      PublishPreview:
        type: string #cannot be boolean see https://github.com/actions/runner/issues/1483
        description: Publish preview branch?
        required: true
        default: false

jobs:
  build:
    #no point using matrix build as "Container operations are only supported on Linux runners"
    # strategy:
    #   matrix:
    #     os: [ubuntu-latest,windows-latest]
    # runs-on: ${{matrix.os}}
    runs-on: ubuntu-latest
    outputs:
      # SemVer: ${{ steps.dotnet.outputs.SemVer }}
      # FullSemVer: ${{ steps.dotnet.outputs.FullSemVer }}
      BuildConfiguration: ${{ steps.dotnet.outputs.BuildConfiguration }}
    # env:
    #   PublishPreview: ${{ inputs.PublishPreview }}
    steps:
      - uses: f2calv/gha-dotnet-nuget@main
        id: dotnet
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUGET_API_KEY: ${{ inputs.NUGET_API_KEY }}
          BuildConfiguration: ${{ github.event.inputs.BuildConfiguration }}
          PublishPreview: ${{ inputs.PublishPreview }}

  SonarQube:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: f2calv/gha-sonarqube@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
          BuildConfiguration: ${{ needs.build.outputs.BuildConfiguration }}
